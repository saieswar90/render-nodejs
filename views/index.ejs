<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Owner Dashboard</title>
    <link rel="stylesheet" href="/styles.css"> <!-- Link to external CSS -->
</head>
<body>
    <h1>Owner Dashboard</h1>
    <div id="orders-container">
        <% orders.forEach(order => { %>
            <div class="order-card <%= order.status === 'Delivered' ? 'delivered' : 'pending' %>" data-id="<%= order._id %>">
                <h3><%= order.name %></h3>
                <p><strong>Phone:</strong> <%= order.phoneNumber || 'N/A' %></p>
                <p><strong>Address:</strong> <%= order.address %></p>
                <p><strong>Fuel Type:</strong> <%= order.fuelType %></p>
                <p><strong>Litres:</strong> <%= order.litres %></p>
                <p><strong>Status:</strong> <span class="status-text"><%= order.status %></span></p>
                <% if (order.status !== 'Delivered') { %>
                    <button class="mark-delivered-btn" data-id="<%= order._id %>">Mark as Delivered</button>
                <% } else { %>
                    <span class="already-delivered">Already Delivered</span>
                <% } %>
            </div>
        <% }) %>
    </div>

    <!-- Add JavaScript for handling button clicks -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Add event listener to all "Mark as Delivered" buttons
            document.querySelectorAll('.mark-delivered-btn').forEach(button => {
                button.addEventListener('click', async () => {
                    const orderId = button.getAttribute('data-id'); // Get the order ID from the button's data attribute

                    try {
                        // Send a POST request to update the status
                        const response = await fetch(`/update-status/${orderId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                        });

                        const result = await response.json();

                        if (response.ok) {
                            // Find the corresponding card and update the status text
                            const card = button.closest('.order-card');
                            const statusText = card.querySelector('.status-text');
                            statusText.textContent = result.status; // Update the status text to "Delivered"

                            // Change the card's styling to indicate it's delivered
                            card.classList.remove('pending');
                            card.classList.add('delivered');

                            // Replace the button with "Already Delivered" text
                            button.parentElement.innerHTML = '<span class="already-delivered">Delivered</span>';
                        } else {
                            alert('Failed to update status: ' + result.message);
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert('An error occurred while updating the status.');
                    }
                });
            });
        });
    </script>
</body>
</html>
